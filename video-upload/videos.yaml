folder: "/mnt/external/pyconza_2014_videos/"

default_metadata:
    mediatype: "movies"
    licenseurl: "http://creativecommons.org/licenses/by/3.0/"
    language: "eng"
    subject: "pyconza; pyconza2014; python"

videos:

# Closing

  - filename: "CLOSING.mp4"
    done: true
    identifier: "pyconza2014-closing"
    metadata:
        title: "PyConZA 2014: Closing Remarks"
        creator: "Simon Cross"
        description: "PyConZA 2014 closing remarks."
        date: "2014-10-03"

# Day 1

  - filename: "1 Writing Python Code to Decide an Election-.mp4"
    upload: false
    identifier: "pyconza2014-code-to-decide-election"
    metadata:
        title: "Writing Python Code to Decide an Election"
        creator: "Peter Lubell-Doughtie"
        description: "Earlier this year Ona was given three weeks to write the software that will tally votes in the Libyan elections and decide who wins and who loses. This is not something we could get wrong. We combined agile development with best practices in testing and QA to build an open source tally system that was well tested, accurate, and easy to use. We will describe a success story of iterative behavior/test-driven-development under extreme conditions. Did the structure of the data change the day before the election? Yes. Did we have the tests to ensure that our implementation changes would not compromise the system's integrity? Yes, and they didn't.

This talk provides a narrative to both Software Engineers and Tech/Product Managers describing why best practices are essential for any organization and any project of any size. We will provide the audience with:

1. Real world examples they can implement in their own workflow and organizations,
2. Insight into what succeeded (quick iteration with prioritization) and what was challenging (nothing being static),
3. Anecdotes and coherent arguments they can take back to their organization to advocate for best practices."
        date: "2014-10-02"

  - filename: "2 A The elephant in the web application-.mp4"
    upload: false
    identifier: "pyconza2014-elephant-in-the-web-app"
    metadata:
        title: "The elephant in the web application"
        creator: "Iwan Vosloo"
        description: "In this talk, I'd like to convince you that developing a web application today is an unnecessarily cumbersome and error prone task. It is time for web frameworks to evolve and become more like graphical user interface (GUI) frameworks: these provide abstractions called \"windows\" or \"widgets\" that let a programmer write an application using terms that describe what is being built, with less (if any) focus on the underlying technologies needed to accomplish drawing these items on a screen.

A web application programmer (in contrast to a GUI programmer) needs to know quite a few different technologies and a fair bit of effort is required to orchestrate these tools into achieving an end result: a template language, HTML, HTTP, CSS, JavaScript, etc. Reusing something substantial is especially difficult, which means in a sizeable web application the same dragons need to be fought several times over. If a programmer has to constantly deal with all this subject matter, it takes focus away from what actually needs to be built: the application itself.

Why are we putting up with having to know HTML and similar low-level technologies? Is it an elephant in the room? Something we pretend not to see, yet we accept the burden of having to work around it?

I will show you what it takes to build a web application; what repetitive tasks there are and what a programmer needs to be aware of. I hope to convince you that there's a better way, and that what was perhaps an idealistic dream a decade ago can now be done - not only by our own fully-featured Python web framework (Reahl), but also by a small number of others beyond the realm of Python."
        date: "2014-10-02"

  - filename: "2 B IPython Notebook-.mp4"
    upload: false
    identifier: "pyconza2014-ipython-notebook"
    metadata:
        title: "IPython Notebook"
        creator: "Tobie Nortje"
        description: "The IPython Notebook is a browser-based interactive computational environment in which you can combine code execution, text, mathematics, plots and rich media into a single document. Notebooks are text files that can be shared with colleagues, converted to other formats such as HTML, PDF, etc."
        date: "2014-10-02"

  - filename: "3 A Hand me the salt while I read my news-.mp4"
    upload: false
    identifier: "pyconza2014-salt-while-read-news"
    metadata:
        title: "Hand me the salt while I read my news"
        creator: "Johann du Toit"
        description: "Millions of people read news monthly, and news tend to happen in bursts. The ideal infrastructure is able to scale up or down as soon as needed and provide a way to let you proactively manage your servers rather than reactively, which in the media game is a deal breaker. It gets even worse when you're running most of the local publication sites, including some big name players.

Focusing on the infrastructure we built, using Salt for management; give insight into the news game and provide examples of challenges our team are facing on a daily basis while servicing users. Expanding also on the workflow put together using various solutions such for logging, notifications with Python acting as the coordinator to keep all these systems in line. Delving into various parts of the system from network monitoring to deploying code.

This talk is meant for anyone interested in getting a glimpse of the systems and workflow put in place that allow us to manage the required load and continue developing with the agility to make the needed quick decisions daily."
        date: "2014-10-02"

  - filename: "3 B Ipython as a tool for teaching and learning-.mp4"
    upload: false
    identifier: "pyconza2014-ipython-for-teaching-and-learning"
    metadata:
        title: "IPython as a tool for teaching and learning"
        creator: "Laura Richter"
        description: "The ipython environment lends itself to teaching and learning: immediate feedback, flexible visualisation, easy access to docstrings and ability to explore modules.

With development of the ipython notebook, this is taken a step further, by providing browser-based access to an ipython environment with the ability to share notebooks with others, embed output products and annotate code.

I will present some experience of using ipython as a teaching tool in a tertiary teaching environment in Radio Astronomy courses in Windhoek, Nairobi and Cape Town."
        date: "2014-10-02"

  - filename: "4 A Building the Internet of Things with Raspberry Pi-.mp4"
    upload: false
    identifier: "pyconza2014-raspberry-pi-internet-of-things"
    metadata:
        title: "Building the Internet of Things with Raspberry Pi"
        creator: "Neil Broers"
        description: "With the advent of the low cost Raspberry Pi computer, anyone with a soldering iron and some basic Python skills can take everyday objects and transform them into fully networked, smart devices.

In this talk, I will show you how I hacked a Raspberry Pi into my home alarm system, turning my network of IP cameras into motion triggered sensors. I will show you how to build basic input and output circuits and introduce you to the RPi.GPIO Python module. Weâ€™ll talk about how you can build a RESTful server on your Raspberry Pi to enable remote access. And finally, more ideas for hacking everyday objects around the home!

No prior electronics knowledge required."
        date: "2014-10-02"

  - filename: "4 B Enabling Science with the Southern African Large Telesco.mp4"
    upload: false
    identifier: "pyconza2014-enabling-science-with-salt"
    metadata:
        title: "Enabling Science with the Southern African Large Telescope with Python"
        creator: "Steve Crawford"
        description: "The Southern African Large Telescope is the premier optical astronomical facility in South Africa. Since the start of science operations in September 2011, it has produced a wide range of scientific results from studies of near-Earth asteroids to galaxies at the edge of the Universe. Once observations are obtained at the telescope, they are passed through our science pipeline, which is built on Python. The pipeline rapidly distributes the data, provides science quality reductions, and monitors the performance of the telescope. In addition, developments made for SALT have also contributed to astropy, a python library for astronomy.

In this talk, we highlight how these developments are helping to contribute to our understanding of the Universe. We describe how we are using python to provide rapid reductions of the observations, for teaching new students, and for solving new problems."
        date: "2014-10-02"

  - filename: "5 a Using Python in Blender-.mp4"
    upload: false
    identifier: "pyconza2014-python-in-blender"
    metadata:
        title: "Using Python in Blender"
        creator: "Albert Nel"
        description: "Python is such a beautiful language, and is used as a scripting language in many open source graphical applications. By using the power of Python within Blender, we can easily automate so many things, and make long tedious tasks seem like child's play.

In this talk I wanted to share a few real world examples where I used Python to do something that would otherwise be impossible (Or just take too long!)

At first, we will take a quick look at the API, and how to get started. Here we will look at where you can find what you are looking for, and how it all comes together. This wont be too in-depth, but just enough to give you a taste. We will play with the console a bit and see how to wield the mighty sword that is Python.

And then, we will look at some scripts. These are a few of the scripts that I wrote while I was working on some random things. This will cover some things such as: Adding new mesh objects, updating object coordinates, changing special properties (such as modifers), and setting keyframes all from the console.

This talk is for anyone interested in seeing just how to leverage the power of Python in Blender. You need not have any experience with Blender since this will be mostly focussed on the Python side of things, so I wont be covering parts of Blender such as rendering, modeling etc."
        date: "2014-10-02"

  - filename: "5 B Large Scale Data Processing -.mp4"
    upload: false
    identifier: "pyconza2014-large-scale-data-processing"
    metadata:
        title: "Large Scale Data Processing with Python and Apache Spark"
        creator: "Nick Pentreath"
        description: "Apache Spark is a fast and general engine for large-scale, distributed data processing. It offers high-level APIs in Java, Scala and Python as well as a rich set of libraries including stream processing, machine learning, and graph analytics. Spark is currently one of the most exciting and fastest-growing Apache open source projects.

This talk will give an overview of the Apache Spark project and introduce the basics of PySpark, the Python API for Spark. It will then dive a little deeper into PySpark internals, and finally show some examples and a live demo covering PySpark, Spark's SQL engine, and machine learning with Spark's built-in libraries as well as other Python libraries."
        date: "2014-10-02"

  - filename: "6 A Lightning Talks.mp4"
    upload: false
    identifier: "pyconza2014-lightning-talks"
    metadata:
        title: "Lightning Talks"
        creator: "Various"
        description: "Lightning Talks are fun, short, five-minute (or less) talks. Ideally each talk should make a single point, often in a fun, quirky or over-the-top way. Slides are optional but often a good image can help get a point across quickly.

Lightning Talks will take place immediately before the keynote at the end of the first day of the conference.

1. Launch to Borderline Zombie in a Year by Mike Jones
2. Why you're dumb if you are doing a Python GUI in anything other than Kivy by Richard Larkin
3. PyPy by Adam Jorgensen (slides)
4. Sonic Pi by Simon de Haan
5. The challenge of mathematical formula markup for African feature phones by Jonathan Endersby"
        date: "2014-10-02"

  - filename: "7 A The Earth is not Flat (and other Heresies)-.mp4"
    done: true 
    identifier: "pyconza2014-earth-is-not-flat"
    metadata:
        title: "The Earth is not Flat (and other Heresies)"
        creator: "Allison Randal"
        description: "Any decent textbook on astrophysics starts with a historical prologue running something like this: \"Once upon a time, we believed the earth was flat. We were wrong. Once upon a time, we believed the sun rotated around the earth. We were wrong.\" It's a shame that computer science textbooks don't start the same way: \"Once upon a time, we believed that all computer languages would be statically compiled. We were wrong. Once upon a time, we believed that execution would always be single-threaded, on a single processor, on a single machine. We were wrong.\" The world of technology is marching on toward ever more concurrent architectures, also called \"Cloud\", and various other buzzwords. The transition is at once so mundane as to go unnoticed, and so fundamental as to shake the very foundations of computer science. This talk explores the past, present, and future of the \"Cloud\", and the implications for Python and other open source projects."
        date: "2014-10-02"

# Day 2

  - filename: "8 What I learned about Python-.mp4"
    done: true
    identifier: "pyconza2014-python-ideas"
    metadata:
        title: "What I learned about Python â€“ and about Guido's time machine â€“ by reading the python-ideas mailing list"
        creator: "David Mertz"
        description: "One of the ways that changes enter the Python language is via their prior discussion on the python-ideas mailing list. Many core contributors read and contribute to this list, some do not, and a large number of other interested Python programmers also participate in the discussion. A recurring element of these fascinating discussions is that ideas which seem compelling at first blush, upon deeper discussion reveal the greater wisdom of doing things just the way Python already does. Not always, of course, but often.

A wonderful case study of this process is the innocuous seeming built-in 'sum()'. This function has an intricate history, with a great deal of dispute over just what its semantics and performance characteristics can or should be. A particular thread on python-ideas, rich with discussions of use cases and subtle semantics, led both to the creation of the 'statistics' module in Python 3.4 (which contains a \"private\" version of the function, 'statistics._sum()') and to a rejection of performance \"optimizations\" when operating over collections of collections (which may or may not seem obvious to \"sum\" in the first place)."
        date: "2014-10-03"

  - filename: "9 A An introduction to regular expressions in Python-.mp4"
    done: true
    identifier: "pyconza2014-regular-expressions"
    metadata:
        title: "An introduction to regular expressions in Python"
        creator: "Adrianna PiÅ„ska"
        description: "Regular expressions are a mini-language used for pattern-matching in text. They have been a staple of the computing world for decades: they are implemented in most programming languages, form the core of several utilities, and can be found lurking in the search-and-replace functionality of any sufficiently advanced text editor.

Despite their usefulness, regular expressions have developed a reputation for complexity and a steep learning curve. New programmers are often warned to steer clear of them -- which is a pity, because there are some problems for which they are a quick and elegant solution.

In this talk I aim to demystify regular expressions for the beginner programmer, and to provide a brief guided tour of Python's re module. I hope to encourage more programmers to get to know this useful tool."
        date: "2014-10-03"

  - filename: "9 B Inspired by Lisp to get Ruby to talk Python-.mp4"
    done: true
    identifier: "pyconza2014-inspired-by-lisp"
    metadata:
        title: "Inspired by Lisp to get Ruby to talk Python"
        creator: "Martin Pretorius"
        description: "Having pushed Ruby to the limits of what it can accomplish in terms of number crunching and data analysis, we looked around for another solution in the data analysis and modelling space. We quickly found that with packages and tools like Numpy, Pandas, the iPython Notebook and new packages like Blaze, Python looked to be a good language fit.

Porting a large existing codebase and accompanying infrastructure from a Ruby to Python ecosystem simply wasn't an option, so we had to do something clever (and fun!).

This talk will be about how we managed to leverage the power of Python while retaining our modelling code in Ruby (and opening up opportunity for other languages), by embracing Lispâ€™s code-is-data philosophy."
        date: "2014-10-03"

  - filename: "10 A journey through the eyes of a newbie female developer-.mp4"
    done: true
    identifier: "pyconza2014-journey-through-eyes-of-newbie-female-developer"
    metadata:
        title: "A journey through the eyes of a newbie female developer"
        creator: "Ridhwana Khan"
        description: "Graduating from a 90% male computer science class, to an initially 100% male software development team, finally allowed me to realise that there is a dire lack of women in the computer science field.

Entering this industry in a minority invokes initial feelings of the need to constantly prove oneself and one's capabilities â€“ normally this puts one at an immediate disadvantage. However, given the correct circumstances, surrounding environments and attitudes, these adverse feelings can quickly be replaced with self-confidence. I was fortunate enough in my daily working environment to have my opinion given the weight that it deserved.

However, experience has also taught me that the sailing is not always so smooth within every aspect of the development field. Certain environments are a lot less welcoming to women because of the strange misconception that they are going against the norms of society.

As a newbie, within the development industry, one has to be able to adapt and have an open mind to gain unbounded knowledge and learning experiences. The world of development is a polyglot environment and striving to build an ambitious career involves lots of hard work and dedication.

I would like to take the audience on a journey to experience the obstacles, growth and challenges that Iâ€™ve faced. I also aim to provide concrete suggestions on increasing female willingness to join the tech industry, and improving co-existence in the development environment.

As a developer, my goal is to provide inspiration to capable young women, to fathers who have daughters, brothers who have sisters, and men who have female colleagues. To convey that I have embraced the development environment, and that we within the tech industry should never shy away from the opportunity to increase our pool of passionate developers.

We are proudly South African and most definitely should be known for our diversityâ€¦."
        date: "2014-10-03"

  # Awaiting clearance before uploading
  # - filename: "10 B Building log cabins-.mp4"
  #   identifier: "pyconza2014-log-cabins"
  #   metadata:
  #       title: "Building log cabins"
  #       creator: "JP Viljoen"
  #       description: "Your applications often try to speak to you, but do you hear them?
  #
  # Many systems have logging, and when you start scaling out, you even have more systems complicating the matter. Getting a handle on tracing a message or event through even just 3 servers can be really tedious, nevermind on more machines. So I built logcabin. It's made out of all the logs on all our servers everywhere.
  #
  # This talk will be a review of how to get started, an overview (plus demo) of what you can do with it, scaling tips, some Q&A about anything people may want to ask. It will be specifically focused on a python-rich (Ubuntu) environment, including diversity across regular twistd logging, custom application logging, and any other components which might fit into your application logic (nginx, dpkg, mail logs), and how it can assist in distributed fault tracing."
  #       date: "2014-10-03"

  - filename: "11 a Python in Debian & Ubuntu-.mp4"
    done: true
    identifier: "pyconza2014-python-in-debian"
    metadata:
        title: "Python in Debian & Ubuntu"
        creator: "Stefano Rivera"
        description: "This talk is aimed at people who maintain Python libraries and also users of Debian packaged libraries. (Wherever I say Debian in this abstract, it applies to Ubuntu too). The talk should explain a bit about how and why libraries are packaged in Debian, and how to help maintain (or contribute) packages you care about.

We'll cover a bit of history of the Python stacks in Debian and how packaged modules are provided, and who does the work. For context, we'll take a quick detour into Debian packaging in general, and the Debian project's lifecycle.

Debian recently gained a new Python packaging tool, pybuild. This finally makes it easy to package the same library for Python 2, 3, and even PyPy. So, we'll have a look at what it does, and some example packaging."
        date: "2014-10-03"

  - filename: "11 B Monkeying around with Twisted-.mp4"
    done: true
    identifier: "pyconza2014-monkeying-with-twisted"
    metadata:
        title: "Monkeying around with Twisted"
        creator: "Richard Spiers"
        description: "Twisted is an open source framework for writing network based services. It utilises an asynchronous, event driven model which allows the rapid development of custom network protocols. While Twisted makes implementing network services much easier, it comes with its own set of challenges. One of these challenges involves tracking the context of multiple requests. In a traditional web server the thread ID could be used to track a particular request and modify log entries appropriately. However, this does not work in Twisted as it utilises a single thread (generally speaking).

We have chosen to tackle this issue, amongst others, by monkey patching some of the Twisted subsystems.

Through this talk we will introduce Twisted as a viable option for programming network based services. No previous Twisted knowledge is required, and the concepts introduced will be explained through real world examples of restful controllers implemented in Twisted. This primer will be followed by a discussion on our solution to the context tracking problem as well as some of the other areas in which we have found monkey patching to be beneficial."
        date: "2014-10-03"

  - filename: "12 A Python in the context of a Start-up-.mp4"
    done: true
    identifier: "pyconza2014-python-in-a-start-up"
    metadata:
        title: "Python in the context of a Start-up: The Good, The Bad and the Ugly"
        creator: "Adam Jorgensen"
        description: "Python is great language for developing software that works well in a short time-span. The ability to produce code quickly that is of a reasonable quality is very important in a work environment where productivity is of extreme importance. It would thus seem to be very well suited for usage in a start-up environment. Is this really the case though?

Here at Springlab we've been using Python to develop our product, an online platform for locating and booking with medical practitioners, since day one. Along the way we've written a lot of code, used a variety of frameworks, libraries and toolkits while experimenting with various approaches to solving the problems we've encountered. Of key importance to us has been balancing the need to produce code that works now against the desire to develop something that we won't become a serious time-sink in the future.

From our position it is thus possible to go into a bit of detail about the pros, cons and extremely sharp corners encountered using Python in the context of a small start-up environment where time is of the essence and there is a lot of pressure to produce a quality product as quickly AND as well as possibly.

My aim with this talk is to give the listener an idea of what kind of experience to expect when using Python in an environment like ours and also to hopefully share some tips that will help others avoid some of the problems we've run into. I hope to cover issues on the subjects of back-end development involving Django + Tastypie, front-end development with Flask, client-side development involving JavaScript as well as touching on the subject of integrating with other tools and pieces of software."
        date: "2014-10-03"

  - filename: "12 b How Python helps writing documentation less painful-.mp4"
    done: true
    identifier: "pyconza2014-python-helps-make-writing-docs-less-painful"
    metadata:
        title: "How Python helps writing documentation less painful"
        creator: "Nickolas Grigoriadis"
        description: "We all know writing documentation is an arduous exercise. We all know how useless and frustrating out-of-date or just plain incorrect documentation is. In this talk I'd like to demonstrate how Python can help make writing documentation, keeping it up-to-date and verifying its validity. It can be surprising what happens when other people discover your little-but-well-documented API.

Python has several built-in concepts and standard tools to help making this easier, such as docstrings, help(), Sphinx, Sphinx plugins, Doctests and generating documentation off tests themselves.

I'll focus on not only using Sphinx as a tool, but also on how to structure your application/library/tool so as to make writing accurate documentation as simple as possible."
        date: "2014-10-03"

  - filename: "13 a Challenges and Prospects of the Python-.mp4"
    done: true
    identifier: "pyconza2014-python-african-csae-tour"
    metadata:
        title: "Challenges and Prospects of the Python African Computational Science and Engineering Tour Project"
        creator: "Godfrey Akpojotor"
        description: "Computer and computer based activities have pervaded our teaching/learning process as well as research so much so that the 21st century academic activities in science and engineering (S & E) cannot be fully engaged without some level of computation. An important choice of a programming language especially in a developing country is the ease to learn it and its accessibility.

Python's unique features and the possibility that any user connected to the internet can download the entire packages into any platform, install it and immediately begin to use it makes it a preferred environment for introducing students and new beginners to elegant and all purpose programming. Therefore in Africa, the Python African Tour project has been launched and I am coordinating its use in computational Science and Engineering (S & E) code-named Python African Computational Science and Engineering Tour (PACSET)."
        date: "2014-10-03"

  - filename: "13 B Practical testing-.mp4"
    done: true
    identifier: "pyconza2014-practical-testing"
    metadata:
        title: "Practical testing"
        creator: "Jeremy Thurgood"
        description: "Automated tests are an important part of any software project, but they're often hard to work with. Good test code should be written with its own set of priorities and is sufficiently different from non-test code that many standard programming practices are unsuitable.

I have spent many years writing (and reading) tests of varying quality and have learned quite a lot from the experience. I hope to share some of that experience and help to remove some of the pain usually associated with writing and maintaining tests.

This talk will cover some of the practical aspects of writing good tests for real code, including:

1. Properties of a good test case
2. How to manage setup and teardown
3. Testing interactions between components
4. Some tools and techniques to make testing easier
   1. Helpers
   2. Verified fakes
   3. Recording doubles"
        date: "2014-10-03"

  - filename: "14 A Reaching Beyond the Web-.mp4"
    done: true
    identifier: "pyconza2014-reaching-beyond-the-web"
    metadata:
        title: "Reaching Beyond the Web"
        creator: "Vinod Kurup"
        description: "Using RapidSMS to power democracy in Libya.

As web developers, we often think of the web as being a ubiquitous resource, available to everyone. The truth is that there are still large groups of people who have either limited or no web access. In addition, there are people who have excellent web access, yet still prefer to use simpler tools to connect to others. How can we reach these groups of people? While not perfectly ubiquitous, SMS technology is much more widespread, especially in areas that don't have great internet connectivity. It's also ubiquitous in the sense that people who have excellent internet access still use SMS frequently.

The government of Libya recently implemented a voter registration system and chose to use SMS as the implementation technology, largely because of these reasons. In this talk, I will explain how we used RapidSMS, a Django-based SMS framework, to build this groundbreaking voter registration system. We will discuss the basics of the RapidSMS framework, and show concrete examples from our Libyan project. I will mostly describe concepts at a high level, though familiarity with Python code may help you understand the details.

If you truly want your tools to reach everyone, adding SMS connectivity will spread the power of your web apps."
        date: "2014-10-03"

  - filename: "14 b How I Became A Cookie Monster-.mp4"
    done: true
    identifier: "pyconza2014-cookie-monster"
    metadata:
        title: "How I Became A Cookie Monster"
        creator: "Michael Joseph"
        description: "My journey from a user of the awesome cookiecutter, to a core member of an awesome += 1 community.

I've learned a lot from the modest and multi-talented @audreyr about leading a community, writing clean cross-platform Python code and putting the B in BFDL.

My talk aims to introduce cookiecutter to a wider audience (if you're at a PyCon and you create new projects, you need to use it) and to chart my progress from the outside to the inside of an open source project."
        date: "2014-10-03"

  - filename: "15 Python at the Observatory -.mp4"
    done: true
    identifier: "pyconza2014-python-at-the-observatory"
    metadata:
        title: "Python at the Observatory - Old telescopes, new instruments"
        creator: "Carel van Gend; Briehan Lombaard"
        description: "Astronomy in South Africa has a long and illustrious history. In addition to the premier, 10-m Southern Africa Large Telescope (SALT) , there are a number of small- and medium-sized telescopes hosted at the South African Astronomical Observatory that still produce a great deal of valuable data. We'd like to show how we're using new instruments and the nimbleness of Python to bring seventy-year-old telescopes into the 21st century.

Our long-term goal is to have the telescopes and associated instruments be remotely operable, easy to use, and robust enough that valuable data is reliably captured and stored. In addition, we want to make it as easy as possible to update and improve the software which controls the instruments.

We have developed a distributed framework to control the instruments. Drivers for individual components may be written in whichever language is most suitable (we've used C, C++ and Python where appropriate). These drivers communicate over a TCP/IP socket with a Python controller process, and on top of that is a Python/Flask driven web interface.

We plan to adapt the framework to new instruments (such as a wide-field camera for the 1.9- and 1-m telescopes), under-development instruments (such as an upgrade to the Cassegrain spectrograph on the 1.9-m telescope), and retrofit to older instruments as feasible.

As a demonstration of the new framework, we will present our work of migrating the control software for the Sutherland High-speed Optical Camera (SHOC) from being a disparate collection of proprietary, Windows-based software, to a unified, open, web accessible system. SHOC is a high-speed, accurately-timed, imaging instrument that can be mounted on the 1.9-, 1-, and 0.75-m telescopes in Sutherland, control of which includes that for a camera, a global positioning system (GPS), and a filter wheel."
        date: "2014-10-03"

